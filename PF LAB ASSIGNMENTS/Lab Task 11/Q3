#include <stdio.h>
#include <string.h>
#include <stdlib.h>

void replaceWordInFile(const char *filename, const char *oldWord, const char *newWord) {
    FILE *file = fopen(filename, "r+");
    if (file == NULL) {
        printf("Could not open file %s\n", filename);
        return;
    }

    fseek(file, 0, SEEK_END);
    long fileSize = ftell(file);
    fseek(file, 0, SEEK_SET);

    char *fileContent = (char *)malloc(fileSize + 1);
    if (fileContent == NULL) {
        printf("Memory allocation failed.\n");
        fclose(file);
        return;
    }

    fread(fileContent, 1, fileSize, file);
    fileContent[fileSize] = '\0';

    char *pos = fileContent;
    while ((pos = strstr(pos, oldWord)) != NULL) {
        size_t lenBefore = pos - fileContent;
        size_t lenOldWord = strlen(oldWord);
        size_t lenNewWord = strlen(newWord);

        char *newContent = (char *)malloc(fileSize - lenOldWord + lenNewWord + 1);
        if (newContent == NULL) {
            printf("Memory allocation failed.\n");
            free(fileContent);
            fclose(file);
            return;
        }

        strncpy(newContent, fileContent, lenBefore);
        strcpy(newContent + lenBefore, newWord);
        strcpy(newContent + lenBefore + lenNewWord, pos + lenOldWord);

        free(fileContent);
        fileContent = newContent;
        fileSize = strlen(fileContent);
        pos += lenNewWord;
    }

    freopen(filename, "w", file);
    fwrite(fileContent, 1, fileSize, file);

    free(fileContent);
    fclose(file);

    printf("Word replaced successfully.\n");
}

int main() {
    const char *filename = "sample.txt";
    const char *oldWord = "oldword";
    const char *newWord = "newword";
    replaceWordInFile(filename, oldWord, newWord);
    return 0;
}
