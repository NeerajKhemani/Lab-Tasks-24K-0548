#include <stdio.h>
#include <string.h>

#define MAX_BOOKS 100

typedef struct {
    char title[100];
    char author[100];
    int publication_year;
    double price;
} Book;

void displayBooks(Book books[], int count) {
    for (int i = 0; i < count; i++) {
        printf("Book %d:\n", i + 1);
        printf("  Title: %s\n", books[i].title);
        printf("  Author: %s\n", books[i].author);
        printf("  Publication Year: %d\n", books[i].publication_year);
        printf("  Price: %.2f\n", books[i].price);
        printf("----------------------\n");
    }
}

void searchByTitle(Book books[], int count, const char* title) {
    int found = 0;
    for (int i = 0; i < count; i++) {
        if (strcmp(books[i].title, title) == 0) {
            printf("Book found:\n");
            printf("  Title: %s\n", books[i].title);
            printf("  Author: %s\n", books[i].author);
            printf("  Publication Year: %d\n", books[i].publication_year);
            printf("  Price: %.2f\n", books[i].price);
            printf("----------------------\n");
            found = 1;
            break;
        }
    }
    if (!found) {
        printf("Book with title '%s' not found.\n", title);
    }
}

void listByAuthor(Book books[], int count, const char* author) {
    int found = 0;
    for (int i = 0; i < count; i++) {
        if (strcmp(books[i].author, author) == 0) {
            printf("Book:\n");
            printf("  Title: %s\n", books[i].title);
            printf("  Author: %s\n", books[i].author);
            printf("  Publication Year: %d\n", books[i].publication_year);
            printf("  Price: %.2f\n", books[i].price);
            printf("----------------------\n");
            found = 1;
        }
    }
    if (!found) {
        printf("No books found by author '%s'.\n", author);
    }
}

int main() {
    Book books[MAX_BOOKS];
    int count = 0;
    int choice;
    char input[100];

    do {
        printf("\nLibrary Menu:\n");
        printf("1. Add a Book\n");
        printf("2. Display All Books\n");
        printf("3. Search by Title\n");
        printf("4. List Books by Author\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        getchar(); // Clear the newline character from input buffer

        switch (choice) {
            case 1:
                if (count < MAX_BOOKS) {
                    printf("Enter book title: ");
                    fgets(books[count].title, sizeof(books[count].title), stdin);
                    books[count].title[strcspn(books[count].title, "\n")] = 0;

                    printf("Enter author: ");
                    fgets(books[count].author, sizeof(books[count].author), stdin);
                    books[count].author[strcspn(books[count].author, "\n")] = 0;

                    printf("Enter publication year: ");
                    scanf("%d", &books[count].publication_year);

                    printf("Enter price: ");
                    scanf("%lf", &books[count].price);
                    getchar(); // Clear the newline character

                    count++;
                    printf("Book added successfully.\n");
                } else {
                    printf("Library is full.\n");
                }
                break;

            case 2:
                if (count > 0) {
                    displayBooks(books, count);
                } else {
                    printf("No books in the library.\n");
                }
                break;

            case 3:
                printf("Enter the title to search: ");
                fgets(input, sizeof(input), stdin);
                input[strcspn(input, "\n")] = 0;
                searchByTitle(books, count, input);
                break;

            case 4:
                printf("Enter the author's name: ");
                fgets(input, sizeof(input), stdin);
                input[strcspn(input, "\n")] = 0;
                listByAuthor(books, count, input);
                break;

            case 5:
                printf("Exiting program.\n");
                break;

            default:
                printf("Invalid choice. Try again.\n");
        }
    } while (choice != 5);

    return 0;
}
